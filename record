#!/bin/bash
#
# Script to move focus to presentation window, press the mouse button to go to
# next slide; then revert focus back to the terminal window
# The idea is to record the time of progressing slides
# designed for laptop+projector where laptop has terminal and projector the presentation
#

outfilecode=$1
setup="default"
if [ $# == 2 ]; then
  setup=$2
fi

op="_"

finalFile="${outfilecode}.mp4"

# Timing information
timingfile="${outfilecode}-timing.chap"
rm -f ${timingfile}

audioFile="${outfilecode}-audio.flac"
audioRate=44100
audioBits=16
audioChannels=1

screenFile="${outfilecode}-screen.mp4"
screenRate=2
screenSize="1200x900"
screenOffset="+150,150"
screenCodec=libx264
screenOptions="-q:v 0 -preset ultrafast -crf 0 -threads 0"
previewarea=1

# Video codec, H.264, and options for fast recording
screenCodec=libx264
screenOptions="-q:v 0 -preset ultrafast -crf 0 -threads 0"

if [ ${setup} = "default" ]
then
	# full screen recording. includes all monitors
	screenSize=$(xdpyinfo | grep dimensions | sed -r 's/^[^0-9]*([0-9]+x[0-9]+).*$/\1/')
elif [ ${setup} = "current" ]
then
	# Only current monitor
	screenSize=$(xrandr --current | grep '*' | uniq | awk '{print $1}')
elif [ ${setup} = "custom" ]
then
	# Home monitor, full screen
	screenSize=1200x900
	screenOffset='+100,100'
elif [ ${setup} = "lecture" ]
then
	# SIIT lecture
	# Lenovo laptop + projector
	# Record only projector
	screenSize=1024x768
	screenOffset='+1366,0'
	screenRate=10;
else
  screenSize=$(cut -d'+' -f1 <<< $setup)
  screenOffset=$(cut -d'+' -f2- <<< $setup)
  screenOffset="+${screenOffset/+/,}"
fi

# Record the microphone audio using SoX
rec -q -r ${audioRate} -b ${audioBits} -c ${audioChannels} "${audioFile}" &
audioPID=$!

# Record the screen using ffmpeg
ffmpeg -show_region 1 -v 0 ${vidconvopt} -y -v 0 -video_size ${screenSize} -r ${screenRate} -f x11grab -i ${DISPLAY}${screenOffset} -c:v ${screenCodec} ${screenOptions} "${screenFile}" &
screenPID=$!

function quit_gracefully() 
{
  echo "stop recording"
  kill -INT ${audioPID} 
  kill -INT ${screenPID}
  exit
}

trap quit_gracefully HUP 
trap quit_gracefully INT
trap quit_gracefully QUIT
trap quit_gracefully TERM

while :
do
  sleep 1
done
